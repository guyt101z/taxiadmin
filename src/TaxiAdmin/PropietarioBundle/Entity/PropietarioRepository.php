<?php

namespace TaxiAdmin\PropietarioBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PropietarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PropietarioRepository extends EntityRepository {

	public function getPropietariosByUsuario($userId){
		return $this->getEntityManager()->createQuery(
			'SELECT p.nombre, p.apellido, p.id FROM TaxiAdminPropietarioBundle:Propietario p WHERE p.idUsuario = :user ORDER BY p.nombre ASC'
			)->setParameter('user', $userId)->getResult();
	}

	public function getEmpresas($id){
		$sql = 'SELECT e.id, e.nombre, e.razonSocial
		FROM propietario_empresa as pe, Empresa as e 
		WHERE pe.propietario_id = :propId AND e.id = pe.empresa_id 
		ORDER BY e.nombre ASC';
		$params = array(
			'propId' => $id,
			);

		return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
	}

	/**
	 * obtengo todos los propietarios que aÃºn no estan asignados a esa empresa
	 */
	public function getPropietariosSinEmpresa($idUsuario, $razonSocial){
		$sql = 		'SELECT p.id, p.nombre, p.apellido 
		FROM Propietario p 
		WHERE p.idUsuario = :idUsuario AND p.id  NOT IN 
		( SELECT pe.propietario_id FROM Empresa e, propietario_empresa pe WHERE e.razonSocial = :razonSocial AND pe.empresa_id = e.id )
		ORDER BY p.nombre ASC'; 
		$params = array(
			'idUsuario' => $idUsuario,
			'razonSocial' => $razonSocial,
			);

		return $this->getEntityManager()->getConnection()->executeQuery($sql, $params)->fetchAll();
	}
}

<?php

/**
 * Skeleton subclass for representing a row from the 'chofer' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sat Mar 17 11:18:29 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class Chofer extends BaseChofer {

    /**
     * Initializes internal state of Chofer object.
     * @see        parent::__construct()
     */
    public function __construct() {
        // Make sure that parent constructor is always invoked, since that
        // is where any default values for this object are set.
        parent::__construct();
    }

    public function __toString() {
        return $this->getNombre();
    }

    public function getNombreCompleto() {
        return $this->getNombre() . " " . $this->getApellidos();
    }

    public function getMultas($criteria = null, PropelPDO $con = null) {
        if (!$criteria) {
            $criteria = new Criteria();
            $criteria->add(MultaPeer::HABILITADO, TRUE);
        }

        return parent::getMultas($criteria);
    }

    public function getAccidentes($criteria = null, PropelPDO $con = null) {
        if (!$criteria) {
            $criteria = new Criteria();
            $criteria->add(AccidentePeer::HABILITADO, TRUE);
        }

        return parent::getAccidentes($criteria);
    }

    public function getAdelantos($criteria = null, PropelPDO $con = null) {
        if (!$criteria) {
            $criteria = new Criteria();
            $criteria->add(AdelantoPeer::HABILITADO, TRUE);
        }

        return parent::getAdelantos($criteria);
    }

    public function getEmpresas() {
        $empresas = array();

        $listaChoferEmpresa = ChoferEmpresaPeer::getByChofer($this->getId(), TRUE);
        foreach ($listaChoferEmpresa as $choferEmpresa) {
            array_push($empresas, $choferEmpresa->getEmpresa());
        }

        return $empresas;
    }

    public function getRecaudaciones($criteria = null, PropelPDO $con = null) {
        if (!$criteria) {
            $criteria = new Criteria();
            $criteria->add(RecaudacionPeer::HABILITADO, TRUE);
        }

        return parent::getRecaudacions($criteria);
    }

    public function getUltimasRecaudaciones($criteria = null, PropelPDO $con = null) {
        if (!$criteria) {
            $criteria = new Criteria();
            $criteria->setLimit(4);
            $criteria->add(RecaudacionPeer::HABILITADO, TRUE);
            $criteria->addDescendingOrderByColumn(RecaudacionPeer::FECHA);
        }

        return parent::getRecaudacions($criteria);
    }

    public function getVencimientocarnesalud($format = 'Y-m-d'){
        // cambio el format por el que utilizamos en la aplicacion
        $format = ConstantesFrontEnd::$FORMAT_DATE;
        return parent::getVencimientocarnesalud($format);
    }

    public function getVencimientolibretaconducir($format = 'Y-m-d'){
        // cambio el format por el que utilizamos en la aplicacion
        $format = ConstantesFrontEnd::$FORMAT_DATE;
        return parent::getVencimientolibretaconducir($format);
    }

}

// Chofer

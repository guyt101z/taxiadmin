<?php

/**
 * Skeleton subclass for performing query and update operations on the 'propietario' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sat Mar 17 11:18:28 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class PropietarioPeer extends BasePropietarioPeer {

    // retorno todos los propietarios para el id de usuario pasado
    public static function getPropietariosParaUsuario($idUsuario) {
        $criteria = new Criteria();
        $criteria->add(PropietarioPeer::HABILITADO, TRUE);
        $criteria->add(PropietarioPeer::USUARIO, $idUsuario);
        $propietarios = PropietarioPeer::doSelect($criteria);
        return $propietarios;
    }

    public static function getPropietariosParaUsuarioCriteria($idUsuario) {
        $criteria = new Criteria();
        $criteria->add(PropietarioPeer::HABILITADO, TRUE);
        $criteria->add(PropietarioPeer::USUARIO, $idUsuario);
        return $criteria;
    }

    public static function getPropietariosSinRelacionConEmpresa($idEmpresa, $idUsuario) {
        $criteria = new Criteria();
        $criteria->add(PropietarioPeer::HABILITADO, TRUE);
        $criteria->add(PropietarioPeer::USUARIO, $idUsuario);
        $subSelect = "ID NOT IN (SELECT idPropietario FROM empresa_propietario WHERE habilitado = 1 AND idEmpresa = " . $idEmpresa . " AND usuario = " . $idUsuario . ")";
        $criteria->add(PropietarioPeer::ID, $subSelect, Criteria::CUSTOM);
        $propietarios = PropietarioPeer::doSelect($criteria);
        return $propietarios;
    }

    // retorna el propietario por la cÃ©dula
    public static function getPropietario($ci) {
        $criteria = new Criteria();
        $criteria->add(PropietarioPeer::CEDULA, $ci);
        $props = PropietarioPeer::doSelect($criteria);
        if (count($props) > 0) {
            return $props[0];
        } else {
            return null;
        }
    }

    public static function getPropietarioByPK($pk, $idUsuario) {

        $criteria = new Criteria(PropietarioPeer::DATABASE_NAME);
        $criteria->add(PropietarioPeer::ID, $pk);
        $criteria->add(PropietarioPeer::USUARIO, $idUsuario);
        $propietario = PropietarioPeer::doSelectOne($criteria);

        return $propietario;
    }

}

// PropietarioPeer
